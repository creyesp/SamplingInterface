function [noise, noiseimg] = getRandWNimg (whitenoise)
%Get random white noise image
    noise =  uint8(randi(2,whitenoise.blocks,whitenoise.blocks)-1);
    
    if strcmp(whitenoise.type,'BW')
        noiseimg = Expand(whitenoise.intensity(1)*noise,...
            whitenoise.pxX,whitenoise.pxY);
    else
        zero = zeros(whitenoise.blocks);
        switch whitenoise.type,
            case 'BB', noiseimg = Expand(cat(3,zero,zero,...
                    whitenoise.intensity(3)*noise),...
                    whitenoise.pxX,whitenoise.pxY);
            case 'BG', noiseimg = Expand(cat(3,zero,...
                    whitenoise.intensity(2)*noise,zero),...
                    whitenoise.pxX,whitenoise.pxY);
            case 'BC', noiseimg = Expand(cat(3,zero,...
                    whitenoise.intensity(2)*noise,...
                    whitenoise.intensity(3)*noise),...
                    whitenoise.pxX,whitenoise.pxY);
            case 'BBGC', noise2 = uint8(randi(2,whitenoise.blocks,...
                            whitenoise.blocks)-1);
                    noiseimg = Expand(cat(3,zero,...
                        whitenoise.intensity(2)*noise,...
                        whitenoise.intensity(3)*noise2),...
                        whitenoise.pxX,whitenoise.pxY);
            case 'BY', noiseimg = Expand(cat(3,...
                    whitenoise.intensity(1)*noise,...
                    whitenoise.intensity(2)*noise,...
                    zero),whitenoise.pxX,whitenoise.pxY);
            case 'BLG', noiseimg = Expand(cat(3,zero,...
                    whitenoise.intensity(2)*noise,...
<<<<<<< HEAD
                    whitenoise.intensity(3)*(1-noise)),...
=======
                    whitenoise.intensity(3)*(~noise)),...
>>>>>>> f9e35751058790517b587088fee9340ad4d4067b
                    whitenoise.pxX,whitenoise.pxY);                            
            otherwise, noiseimg = Expand(cat(3,zero,zero,...
                    whitenoise.intensity(3)*noise),...
                    whitenoise.pxX,whitenoise.pxY);
        end
    end   
end